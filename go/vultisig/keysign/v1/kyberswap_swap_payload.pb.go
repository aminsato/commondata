// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: vultisig/keysign/v1/kyberswap_swap_payload.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KyberSwapTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To       string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Data     string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	GasPrice string `protobuf:"bytes,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	Gas      int64  `protobuf:"varint,6,opt,name=gas,proto3" json:"gas,omitempty"`
}

func (x *KyberSwapTransaction) Reset() {
	*x = KyberSwapTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KyberSwapTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KyberSwapTransaction) ProtoMessage() {}

func (x *KyberSwapTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KyberSwapTransaction.ProtoReflect.Descriptor instead.
func (*KyberSwapTransaction) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescGZIP(), []int{0}
}

func (x *KyberSwapTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *KyberSwapTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *KyberSwapTransaction) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *KyberSwapTransaction) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *KyberSwapTransaction) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *KyberSwapTransaction) GetGas() int64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

type KyberSwapQuoteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmountIn              string `protobuf:"bytes,1,opt,name=amount_in,json=amountIn,proto3" json:"amount_in,omitempty"`
	AmountInUsd           string `protobuf:"bytes,2,opt,name=amount_in_usd,json=amountInUsd,proto3" json:"amount_in_usd,omitempty"`
	AmountOut             string `protobuf:"bytes,3,opt,name=amount_out,json=amountOut,proto3" json:"amount_out,omitempty"`
	AmountOutUsd          string `protobuf:"bytes,4,opt,name=amount_out_usd,json=amountOutUsd,proto3" json:"amount_out_usd,omitempty"`
	Gas                   string `protobuf:"bytes,5,opt,name=gas,proto3" json:"gas,omitempty"`
	GasUsd                string `protobuf:"bytes,6,opt,name=gas_usd,json=gasUsd,proto3" json:"gas_usd,omitempty"`
	Data                  string `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	RouterAddress         string `protobuf:"bytes,8,opt,name=router_address,json=routerAddress,proto3" json:"router_address,omitempty"`
	TransactionValue      string `protobuf:"bytes,9,opt,name=transaction_value,json=transactionValue,proto3" json:"transaction_value,omitempty"`
	AdditionalCostUsd     string `protobuf:"bytes,10,opt,name=additional_cost_usd,json=additionalCostUsd,proto3" json:"additional_cost_usd,omitempty"`
	AdditionalCostMessage string `protobuf:"bytes,11,opt,name=additional_cost_message,json=additionalCostMessage,proto3" json:"additional_cost_message,omitempty"`
	GasPrice              string `protobuf:"bytes,12,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
}

func (x *KyberSwapQuoteData) Reset() {
	*x = KyberSwapQuoteData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KyberSwapQuoteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KyberSwapQuoteData) ProtoMessage() {}

func (x *KyberSwapQuoteData) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KyberSwapQuoteData.ProtoReflect.Descriptor instead.
func (*KyberSwapQuoteData) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescGZIP(), []int{1}
}

func (x *KyberSwapQuoteData) GetAmountIn() string {
	if x != nil {
		return x.AmountIn
	}
	return ""
}

func (x *KyberSwapQuoteData) GetAmountInUsd() string {
	if x != nil {
		return x.AmountInUsd
	}
	return ""
}

func (x *KyberSwapQuoteData) GetAmountOut() string {
	if x != nil {
		return x.AmountOut
	}
	return ""
}

func (x *KyberSwapQuoteData) GetAmountOutUsd() string {
	if x != nil {
		return x.AmountOutUsd
	}
	return ""
}

func (x *KyberSwapQuoteData) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

func (x *KyberSwapQuoteData) GetGasUsd() string {
	if x != nil {
		return x.GasUsd
	}
	return ""
}

func (x *KyberSwapQuoteData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *KyberSwapQuoteData) GetRouterAddress() string {
	if x != nil {
		return x.RouterAddress
	}
	return ""
}

func (x *KyberSwapQuoteData) GetTransactionValue() string {
	if x != nil {
		return x.TransactionValue
	}
	return ""
}

func (x *KyberSwapQuoteData) GetAdditionalCostUsd() string {
	if x != nil {
		return x.AdditionalCostUsd
	}
	return ""
}

func (x *KyberSwapQuoteData) GetAdditionalCostMessage() string {
	if x != nil {
		return x.AdditionalCostMessage
	}
	return ""
}

func (x *KyberSwapQuoteData) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

type KyberSwapQuote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message   string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data      *KyberSwapQuoteData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequestId string              `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Compatibility fields for OneInch interface
	DstAmount string                `protobuf:"bytes,5,opt,name=dst_amount,json=dstAmount,proto3" json:"dst_amount,omitempty"`
	Tx        *KyberSwapTransaction `protobuf:"bytes,6,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *KyberSwapQuote) Reset() {
	*x = KyberSwapQuote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KyberSwapQuote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KyberSwapQuote) ProtoMessage() {}

func (x *KyberSwapQuote) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KyberSwapQuote.ProtoReflect.Descriptor instead.
func (*KyberSwapQuote) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescGZIP(), []int{2}
}

func (x *KyberSwapQuote) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *KyberSwapQuote) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *KyberSwapQuote) GetData() *KyberSwapQuoteData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *KyberSwapQuote) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *KyberSwapQuote) GetDstAmount() string {
	if x != nil {
		return x.DstAmount
	}
	return ""
}

func (x *KyberSwapQuote) GetTx() *KyberSwapTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

type KyberSwapPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromCoin        *Coin           `protobuf:"bytes,1,opt,name=from_coin,json=fromCoin,proto3" json:"from_coin,omitempty"`
	ToCoin          *Coin           `protobuf:"bytes,2,opt,name=to_coin,json=toCoin,proto3" json:"to_coin,omitempty"`
	FromAmount      string          `protobuf:"bytes,3,opt,name=from_amount,json=fromAmount,proto3" json:"from_amount,omitempty"`
	ToAmountDecimal string          `protobuf:"bytes,4,opt,name=to_amount_decimal,json=toAmountDecimal,proto3" json:"to_amount_decimal,omitempty"`
	Quote           *KyberSwapQuote `protobuf:"bytes,5,opt,name=quote,proto3" json:"quote,omitempty"`
}

func (x *KyberSwapPayload) Reset() {
	*x = KyberSwapPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KyberSwapPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KyberSwapPayload) ProtoMessage() {}

func (x *KyberSwapPayload) ProtoReflect() protoreflect.Message {
	mi := &file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KyberSwapPayload.ProtoReflect.Descriptor instead.
func (*KyberSwapPayload) Descriptor() ([]byte, []int) {
	return file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescGZIP(), []int{3}
}

func (x *KyberSwapPayload) GetFromCoin() *Coin {
	if x != nil {
		return x.FromCoin
	}
	return nil
}

func (x *KyberSwapPayload) GetToCoin() *Coin {
	if x != nil {
		return x.ToCoin
	}
	return nil
}

func (x *KyberSwapPayload) GetFromAmount() string {
	if x != nil {
		return x.FromAmount
	}
	return ""
}

func (x *KyberSwapPayload) GetToAmountDecimal() string {
	if x != nil {
		return x.ToAmountDecimal
	}
	return ""
}

func (x *KyberSwapPayload) GetQuote() *KyberSwapQuote {
	if x != nil {
		return x.Quote
	}
	return nil
}

var File_vultisig_keysign_v1_kyberswap_swap_payload_proto protoreflect.FileDescriptor

var file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDesc = []byte{
	0x0a, 0x30, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x69,
	0x67, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x79, 0x62, 0x65, 0x72, 0x73, 0x77, 0x61, 0x70, 0x5f,
	0x73, 0x77, 0x61, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69,
	0x67, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x4b, 0x79, 0x62, 0x65,
	0x72, 0x53, 0x77, 0x61, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x61, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x67, 0x61, 0x73, 0x22, 0xb2, 0x03,
	0x0a, 0x12, 0x4b, 0x79, 0x62, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x75,
	0x73, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x55, 0x73, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x55, 0x73, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x61, 0x73, 0x55, 0x73, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x75, 0x73, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x64, 0x12, 0x36, 0x0a,
	0x17, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x0e, 0x4b, 0x79, 0x62, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x62, 0x65, 0x72, 0x53, 0x77, 0x61,
	0x70, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x73, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x73, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39,
	0x0a, 0x02, 0x74, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x76, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x69, 0x67, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4b, 0x79, 0x62, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0x86, 0x02, 0x0a, 0x10, 0x4b, 0x79,
	0x62, 0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x36,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2e, 0x6b, 0x65, 0x79,
	0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73,
	0x69, 0x67, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x69, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74,
	0x6f, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69,
	0x67, 0x2e, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x79, 0x62,
	0x65, 0x72, 0x53, 0x77, 0x61, 0x70, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x42, 0x54, 0x0a, 0x13, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2e, 0x6b,
	0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x75, 0x6c, 0x74, 0x69, 0x73, 0x69, 0x67, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x75, 0x6c,
	0x74, 0x69, 0x73, 0x69, 0x67, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x69, 0x67, 0x6e, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0xba, 0x02, 0x02, 0x56, 0x53, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescOnce sync.Once
	file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescData = file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDesc
)

func file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescGZIP() []byte {
	file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescOnce.Do(func() {
		file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescData = protoimpl.X.CompressGZIP(file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescData)
	})
	return file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDescData
}

var file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_vultisig_keysign_v1_kyberswap_swap_payload_proto_goTypes = []any{
	(*KyberSwapTransaction)(nil), // 0: vultisig.keysign.v1.KyberSwapTransaction
	(*KyberSwapQuoteData)(nil),   // 1: vultisig.keysign.v1.KyberSwapQuoteData
	(*KyberSwapQuote)(nil),       // 2: vultisig.keysign.v1.KyberSwapQuote
	(*KyberSwapPayload)(nil),     // 3: vultisig.keysign.v1.KyberSwapPayload
	(*Coin)(nil),                 // 4: vultisig.keysign.v1.Coin
}
var file_vultisig_keysign_v1_kyberswap_swap_payload_proto_depIdxs = []int32{
	1, // 0: vultisig.keysign.v1.KyberSwapQuote.data:type_name -> vultisig.keysign.v1.KyberSwapQuoteData
	0, // 1: vultisig.keysign.v1.KyberSwapQuote.tx:type_name -> vultisig.keysign.v1.KyberSwapTransaction
	4, // 2: vultisig.keysign.v1.KyberSwapPayload.from_coin:type_name -> vultisig.keysign.v1.Coin
	4, // 3: vultisig.keysign.v1.KyberSwapPayload.to_coin:type_name -> vultisig.keysign.v1.Coin
	2, // 4: vultisig.keysign.v1.KyberSwapPayload.quote:type_name -> vultisig.keysign.v1.KyberSwapQuote
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_vultisig_keysign_v1_kyberswap_swap_payload_proto_init() }
func file_vultisig_keysign_v1_kyberswap_swap_payload_proto_init() {
	if File_vultisig_keysign_v1_kyberswap_swap_payload_proto != nil {
		return
	}
	file_vultisig_keysign_v1_coin_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*KyberSwapTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*KyberSwapQuoteData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*KyberSwapQuote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*KyberSwapPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vultisig_keysign_v1_kyberswap_swap_payload_proto_goTypes,
		DependencyIndexes: file_vultisig_keysign_v1_kyberswap_swap_payload_proto_depIdxs,
		MessageInfos:      file_vultisig_keysign_v1_kyberswap_swap_payload_proto_msgTypes,
	}.Build()
	File_vultisig_keysign_v1_kyberswap_swap_payload_proto = out.File
	file_vultisig_keysign_v1_kyberswap_swap_payload_proto_rawDesc = nil
	file_vultisig_keysign_v1_kyberswap_swap_payload_proto_goTypes = nil
	file_vultisig_keysign_v1_kyberswap_swap_payload_proto_depIdxs = nil
}
