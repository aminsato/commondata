// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: vultisig/vault/v1/vault_container.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package vultisig.vault.v1;

@kotlin.jvm.JvmName("-initializevaultContainer")
public inline fun vaultContainer(block: vultisig.vault.v1.VaultContainerKt.Dsl.() -> kotlin.Unit): vultisig.vault.v1.VaultContainerOuterClass.VaultContainer =
  vultisig.vault.v1.VaultContainerKt.Dsl._create(vultisig.vault.v1.VaultContainerOuterClass.VaultContainer.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `vultisig.vault.v1.VaultContainer`
 */
public object VaultContainerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: vultisig.vault.v1.VaultContainerOuterClass.VaultContainer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: vultisig.vault.v1.VaultContainerOuterClass.VaultContainer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): vultisig.vault.v1.VaultContainerOuterClass.VaultContainer = _builder.build()

    /**
     * ```
     * version of data format
     * ```
     *
     * `string version = 1 [json_name = "version"];`
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * ```
     * version of data format
     * ```
     *
     * `string version = 1 [json_name = "version"];`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * ```
     * vault contained the container
     * ```
     *
     * `string vault = 2 [json_name = "vault"];`
     */
    public var vault: kotlin.String
      @JvmName("getVault")
      get() = _builder.getVault()
      @JvmName("setVault")
      set(value) {
        _builder.setVault(value)
      }
    /**
     * ```
     * vault contained the container
     * ```
     *
     * `string vault = 2 [json_name = "vault"];`
     */
    public fun clearVault() {
      _builder.clearVault()
    }

    /**
     * ```
     * is vault encrypted with password
     * ```
     *
     * `bool is_encrypted = 3 [json_name = "isEncrypted"];`
     */
    public var isEncrypted: kotlin.Boolean
      @JvmName("getIsEncrypted")
      get() = _builder.getIsEncrypted()
      @JvmName("setIsEncrypted")
      set(value) {
        _builder.setIsEncrypted(value)
      }
    /**
     * ```
     * is vault encrypted with password
     * ```
     *
     * `bool is_encrypted = 3 [json_name = "isEncrypted"];`
     */
    public fun clearIsEncrypted() {
      _builder.clearIsEncrypted()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun vultisig.vault.v1.VaultContainerOuterClass.VaultContainer.copy(block: `vultisig.vault.v1`.VaultContainerKt.Dsl.() -> kotlin.Unit): vultisig.vault.v1.VaultContainerOuterClass.VaultContainer =
  `vultisig.vault.v1`.VaultContainerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

